{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"账号\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.form.username = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.form.username]]), _withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"密码\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.password = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.form.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.log && $options.log(...args))\n  }, \"登录\")]);\n}","map":{"version":3,"mappings":";;uBACAA,oBAIM,KAJN,EAIM,IAJN,EAIM,iBAHJC,oBAAgD,OAAhD,EAAgD;IAAzCC,WAAW,EAAC,IAA6B;+DAAfC,WAAKC,WAAQC;EAAE,CAAhD;;EAAA,kBAAiCF,WAAKC,WAGlC,kBAFJH,oBAAgE,OAAhE,EAAgE;IAAzDC,WAAW,EAAC,IAA6C;IAAxCI,IAAI,EAAC,UAAmC;+DAAfH,WAAKI,WAAQF;EAAE,CAAhE;;EAAA,kBAAiDF,WAAKI,WAElD,EADJN,oBAAgC,QAAhC,EAAgC;IAAvBO,OAAK,yCAAEC,qCAAF;EAAkB,CAAhC,EAAqB,IAArB,CACI,CAJN","names":["_createElementBlock","_createElementVNode","placeholder","$data","username","$event","type","password","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\83843\\Desktop\\实训Ⅲ\\shixun\\vue\\src\\views\\Login_test.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <input placeholder=\"账号\" v-model=\"form.username\">\r\n  <input placeholder=\"密码\" type=\"password\" v-model=\"form.password\">\r\n  <button @click=\"log\">登录</button>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Login_test\",\r\n  data(){\r\n    return{\r\n      form:{},\r\n    }\r\n  },\r\n  methods:{\r\n    log(){\r\n      request.post(\"/api/user/login\",this.form).then(res=>{\r\n        if (res.code==='0'){\r\n          this.$router.push(\"/test\")\r\n        }else{\r\n          alert(res.msg)\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}